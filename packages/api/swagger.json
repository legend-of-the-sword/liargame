{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "The Nameless Terror Api",
    "description": "An api for The Nameless Terror",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Users of The Nameless Terror"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/games": {
      "get": {
        "tags": ["Games"],
        "summary": "Get all games",
        "description": "Get all games",
        "operationId": "getGames",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Game"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/game": {
      "get": {
        "tags": ["Games"],
        "summary": "Get a game",
        "description": "Get a game",
        "operationId": "getGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of game to return",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/game": {
      "post": {
        "tags": ["Games"],
        "summary": "Create a game",
        "description": "Create a game",
        "operationId": "createGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body", 
            "name": "game",
            "size": "number",
            "description": "Game object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "required":
              "name",
              "properties": {
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "gameCode": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/start": {
      "post": {
        "tags": ["Games"],
        "summary": "Start a game",
        "description": "Start a game",
        "operationId": "startGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of game to start",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/startNight": {
      "post": {
        "tags": ["Games"],
        "summary": "Start a night",
        "description": "Start a night",
        "operationId": "startNight",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of game to start night",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/startDay": {
      "post": {
        "tags": ["Games"],
        "summary": "Start a day",
        "description": "Start a day",
        "operationId": "startDay",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of game to start day",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/players/:gameId": {
      "get": {
        "tags": ["Players"],
        "summary": "Get all players",
        "description": "Get all players",
        "operationId": "getPlayers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "ID of game to get players from",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/player": {
      "get": {
        "tags": ["Players"],
        "summary": "Get a player",
        "description": "Get a player",
        "operationId": "getPlayer",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of player to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/player": {
      "post": {
        "tags": ["Players"],
        "summary": "Create a player",
        "description": "Create a player",
        "operationId": "createPlayer",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "player",
            "in": "body",
            "description": "Player object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/player": {
      "put": {
        "tags": ["Players"],
        "summary": "Update a player",
        "description": "Update a player",
        "operationId": "updatePlayer",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "player",
            "in": "body",
            "description": "Player object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "player/game": {
      "get": {
        "tags": ["Players"],
        "summary": "Get a player by game",
        "description": "Get a player by game",
        "operationId": "getPlayerByGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "gameId",
            "in": "query",
            "description": "ID of game to get player from",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "ID of player to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get a role",
        "description": "Get a role",
        "operationId": "getRole",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of role to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/role": {
      "post": {
        "tags": ["Roles"],
        "summary": "Create a role",
        "description": "Create a role",
        "operationId": "createRole",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "role",
            "in": "body",
            "description": "Role object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/role/:id": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get a role by ID",
        "description": "Get a role by ID",
        "operationId": "getRoleById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of role to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/rounds/:gameId": {
      "get": {
        "tags": ["Rounds"],
        "summary": "Get rounds by game",
        "description": "Get rounds by game",
        "operationId": "getRoundsByGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "ID of game to get rounds from",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Round"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/round/:id" : {
      "get": {
        "tags": ["Rounds"],
        "summary": "Get a round by ID",
        "description": "Get a round by ID",
        "operationId": "getRoundById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of round to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Round"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/vote" : {
      "post": {
        "tags": ["Votes"],
        "summary": "Create a vote",
        "description": "Create a vote",
        "operationId": "createVote",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "vote",
            "in": "body",
            "description": "Vote object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tallyVote" : {
      "post": {
        "tags": ["Votes"],
        "summary": "Tally votes",
        "description": "Tally votes",
        "operationId": "tallyVotes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "gameId",
            "in": "body",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  }
}